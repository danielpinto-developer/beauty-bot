[paths]
train = ./train.jsonl
dev = ./dev.jsonl
vectors = null
init_tok2vec = null

[system]
seed = 0
gpu_allocator = "pytorch"

[nlp]
lang = "es"
pipeline = ["transformer", "ner"]
batch_size = 128

[components]

[components.transformer]
factory = "transformer"
max_batch_items = 4096

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "dccuchile/bert-base-spanish-wwm-cased"
mixed_precision = false

[components.transformer.model.tokenizer_config]
use_fast = true

[components.transformer.model.transformer_config]
output_hidden_states = true

[components.ner]
factory = "ner"

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
upstream = "transformer"
width = 768

[corpora]

[corpora.train]
@readers = "spacy.JsonlCorpus.v1"
path = ${paths.train}

[corpora.dev]
@readers = "spacy.JsonlCorpus.v1"
path = ${paths.dev}

[training]
train_corpus = "corpora.train"
dev_corpus = "corpora.dev"
seed = ${system.seed}
dropout = 0.1
patience = 1600
max_epochs = 50
max_steps = 20000
eval_frequency = 200
accumulate_gradient = 1
frozen_components = []
annotating_components = []
gpu_allocator = "pytorch"

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = true

[training.optimizer]
@optimizers = "Adam.v1"
learn_rate = 0.001
L2 = 0.01
grad_clip = 1.0

[training.score_weights]
ents_f = 1.0
ents_p = 0.0
ents_r = 0.0

[initialize]
vectors = ${paths.vectors}
init_tok2vec = ${paths.init_tok2vec}
